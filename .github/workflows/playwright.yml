name: Playwright
on: [push]
env:
  NEXT_PUBLIC_WEBSITE_STRAPI_BASE_URL: "https://strapi.vae.gouv.fr"
  NEXT_PUBLIC_WEBSITE_API_GRAPHQL: "https://reva.incubateur.net/api/graphql"
  NEXT_PUBLIC_APP_CANDIDAT_GRAPHQL_API_URL: "https://reva.incubateur.net/api/graphql"
  NEXT_PUBLIC_APP_CANDIDAT_KEYCLOAK_CLIENT_ID: "reva-app"
  NEXT_PUBLIC_APP_CANDIDAT_KEYCLOAK_REALM: "reva-app"
  NEXT_PUBLIC_APP_CANDIDAT_KEYCLOAK_URL: https://auth.reva.incubateur.net
  NEXT_PUBLIC_KEYCLOAK_CLIENT_ID: "reva-admin"
  NEXT_PUBLIC_KEYCLOAK_REALM: "reva"
  NEXT_PUBLIC_KEYCLOAK_URL: "http://localhost:8888/auth" # should not be reachable, but we need to set a value and it won't work with https://auth.reva.incubateur.net
jobs:
  playwright-reva-website:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./packages/reva-website
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "npm"
      - name: Website node_modules cache
        id: website-node_modules-cache
        uses: actions/cache@v4
        with:
          path: ./packages/reva-website/node_modules
          key: website-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Installing dependencies
        if: steps.website-node_modules-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Get Playwright version
        run: echo "PLAYWRIGHT_VERSION=`npm list | grep '@playwright/test'|sed 's/.*playwright\/test@//'`" >> $GITHUB_ENV
      - name: Cache Playwright Binaries
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
          key: playwright-${{ env.PLAYWRIGHT_VERSION }}
      - name: Install Playwright Browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
      - name: Build to retrieve graphql schema from API folder
        run: npm run build
      - name: Run Playwright tests
        run: npm run test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report-website
          path: packages/reva-website/playwright-report/
          retention-days: 30

  playwright-reva-vae-collective:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./packages/reva-vae-collective
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: "npm"
      - name: VAE Collective node_modules cache
        id: vae-collective-node_modules-cache
        uses: actions/cache@v4
        with:
          path: ./packages/reva-vae-collective/node_modules
          key: vae-collective-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Installing dependencies
        if: steps.vae-collective-node_modules-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Get Playwright version
        run: echo "PLAYWRIGHT_VERSION=`npm list | grep '@playwright/test'|sed 's/.*playwright\/test@//'`" >> $GITHUB_ENV
      - name: Cache Playwright Binaries
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
          key: playwright-${{ env.PLAYWRIGHT_VERSION }}
      - name: Install Playwright Browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
      - name: Build to retrieve graphql schema from API folder
        run: npm run build
      - name: Run Playwright tests
        run: npm run test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report-vae-collective
          path: packages/reva-vae-collective/playwright-report/
          retention-days: 30

  playwright-reva-candidate:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./packages/reva-candidate
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: "npm"
      - name: Candidate node_modules cache
        id: candidate-node_modules-cache
        uses: actions/cache@v4
        with:
          path: ./packages/reva-candidate/node_modules
          key: candidate-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Installing dependencies
        if: steps.candidate-node_modules-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Get Playwright version
        run: echo "PLAYWRIGHT_VERSION=`npm list | grep '@playwright/test'|sed 's/.*playwright\/test@//'`" >> $GITHUB_ENV
      - name: Cache Playwright Binaries
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
          key: playwright-${{ env.PLAYWRIGHT_VERSION }}
      - name: Install Playwright Browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
      - name: Build to retrieve graphql schema from API folder
        run: npm run build
      - name: Run Playwright tests
        run: npm run test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report-candidate
          path: packages/reva-candidate/playwright-report/
          retention-days: 30

  playwright-reva-admin:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./packages/reva-admin-react
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: "npm"
      - name: Admin node_modules cache
        id: admin-node_modules-cache
        uses: actions/cache@v4
        with:
          path: ./packages/reva-admin-react/node_modules
          key: admin-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Installing dependencies
        if: steps.admin-node_modules-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Get Playwright version
        run: echo "PLAYWRIGHT_VERSION=`npm list | grep '@playwright/test'|sed 's/.*playwright\/test@//'`" >> $GITHUB_ENV
      - name: Cache Playwright Binaries
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
          key: playwright-${{ env.PLAYWRIGHT_VERSION }}
      - name: Install Playwright Browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
      - name: Build to retrieve graphql schema from API folder
        run: npm run build
      - name: Run Playwright tests
        run: npm run test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report-admin
          path: packages/reva-admin-react/playwright-report/
          retention-days: 30
