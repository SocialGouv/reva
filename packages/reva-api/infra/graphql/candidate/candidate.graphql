enum Gender {
  man
  undisclosed
  woman
}

type Tokens {
  accessToken: String!
  refreshToken: String!
  idToken: String!
}

type CandidateLogged {
  tokens: Tokens!
  candidate: Candidate!
}

type Candidate {
  id: UUID!
  gender: Gender
  firstname: String!
  firstname2: String
  firstname3: String
  lastname: String!
  email: String!
  phone: String!
  candidacy: Candidacy!
  highestDegree: Degree
  vulnerabilityIndicator: VulnerabilityIndicator
}

type Query {
  candidate_getCandidateWithCandidacy: Candidate!
  candidate_getCandidateByEmail(email: String!): Candidate
}

input CandidateInput {
  email: String!
  phone: String!
  firstname: String!
  lastname: String!
}

input FullCandidateInput {
  gender: Gender
  firstname: String
  firstname2: String
  firstname3: String
  lastname: String
  email: String
  phone: String
  highestDegreeId: UUID
  vulnerabilityIndicatorId: UUID
}

type Mutation {
  candidate_askForRegistration(candidate: CandidateInput!): String!
  candidate_askForLogin(email: String!): String!
  candidate_login(token: String!): CandidateLogged!
  candidate_updateCandidate(
    id: UUID!
    candidate: FullCandidateInput!
  ): Candidate!
}
