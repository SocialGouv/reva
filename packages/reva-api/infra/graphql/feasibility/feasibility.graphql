enum FeasibilityStatus {
  PENDING
  REJECTED
  ADMISSIBLE
}

type CertificationAuthority {
  id: ID!
  label: String!
  contactFullName: String
  contactEmail: String
}

type Feasibility {
  id: ID!
  feasibilityFileSentAt: Timestamp!
  feasibilityFile: File!
  otherFile: File
  candidacy: Candidacy!
  status: FeasibilityStatus!
  decisionComment: String
}

type File {
  url: String!
  name: String!
}

type Candidacy {
  certificationAuthority: CertificationAuthority
  feasibility: Feasibility
}

type FeasibilityCountByCategory {
  ALL: Int!
}

type FeasibilityPage {
  rows: [Feasibility!]!
  info: PaginationInfo!
}

enum FeasibilityCategoryFilter {
  ALL
}

type Query {
  feasibilityCountByCategory: FeasibilityCountByCategory!
  feasibilities(offset: Int, limit: Int): FeasibilityPage!
  feasibility(feasibilityId: ID!): Feasibility
}

type Mutation {
  validateFeasibility(feasibilityId: ID!, comment: String): Feasibility
  rejectFeasibility(
    feasibilityId: ID!
    comment: String
  ): Feasibility
}

