enum LegalStatus {
  EI
  EURL
  SARL
  SAS
  SASU
  SA
  NC
}

type SubscriptionRequest {
  id: ID!
  companySiret: String!
  companyLegalStatus: LegalStatus!
  companyName: String!
  companyAddress: String!
  companyZipCode: String!
  companyCity: String!
  accountFirstname: String!
  accountLastname: String!
  accountEmail: String!
  accountPhoneNumber: String!
  typology: OrganismTypology!
  subscriptionRequestOnDomaine: [SubscriptionRequestOnDomaine!]!
  subscriptionRequestOnConventionCollective: [SubscriptionRequestOnConventionCollective!]!
  departmentsWithOrganismMethods: [DepartmentWithOrganismMethods!]!
  companyWebsite: String
  qualiopiCertificateExpiresAt: Timestamp!
}

type SubscriptionRequestOnDomaine {
  domaine: Domaine!
}

type SubscriptionRequestOnConventionCollective {
  ccn: ConventionCollective!
}

type DepartmentWithOrganismMethods {
  department: Department!
  isOnSite: Boolean!
  isRemote: Boolean!
}

type SubscriptionRequestSummary {
  id: ID!
  accountLastname: String!
  accountFirstname: String!
  accountEmail: String!
  companyName: String!
  companyAddress: String!
  createdAt: Timestamp!
}

input SubscriptionRequestOrderByInput {
  companyName: Sort
  accountLastname: Sort
  createdAt: Sort
}

type SubscriptionRequestsPaginated {
  rows: [SubscriptionRequestSummary!]!
  info: PaginationInfo!
}

type Query {
  subscription_getSubscriptionRequests(
    filter: String
    offset: Int
    limit: Int
    orderBy: SubscriptionRequestOrderByInput
  ): SubscriptionRequestsPaginated!
  subscription_getSubscriptionRequest(
    subscriptionRequestId: ID!
  ): SubscriptionRequest
}

enum OrganismTypology {
  generaliste
  expertFiliere
  expertBranche
}

input SubscriptionRequestInput {
  companySiret: String!
  companyLegalStatus: LegalStatus!
  companyName: String!
  companyAddress: String!
  companyZipCode: String!
  companyCity: String!
  accountFirstname: String!
  accountLastname: String!
  accountEmail: String!
  accountPhoneNumber: String!
  typology: OrganismTypology!
  domaineIds: [String!]
  ccnIds: [String!]
  onSiteDepartmentsIds: [ID!]!
  remoteDepartmentsIds: [ID!]!
  companyWebsite: String
  qualiopiCertificateExpiresAt: Timestamp!
}

type Mutation {
  subscription_createSubscriptionRequest(
    subscriptionRequest: SubscriptionRequestInput!
  ): SubscriptionRequest!
  subscription_validateSubscriptionRequest(subscriptionRequestId: ID!): String
  subscription_rejectSubscriptionRequest(subscriptionRequestId: ID!): String
}
