enum Duration {
  unknown
  lessThanOneYear
  betweenOneAndThreeYears
  moreThanThreeYears
  moreThanFiveYears
  moreThanTenYears
}

enum CandidateTypology {
  NON_SPECIFIE
  SALARIE_PRIVE
  SALARIE_PUBLIC
  SALARIE_PUBLIC_HOSPITALIER
  SALARIE_ALTERNANT
  SALARIE_INTERIMAIRE
  SALARIE_INTERMITTENT
  SALARIE_EN_CONTRATS_AIDES
  TRAVAILLEUR_NON_SALARIE
  CONJOINT_COLLABORATEUR
  DEMANDEUR_EMPLOI
  AIDANTS_FAMILIAUX
  AIDANTS_FAMILIAUX_AGRICOLES
  BENEVOLE
  STAGIAIRE
  TITULAIRE_MANDAT_ELECTIF
  RETRAITE
  AUTRE
}

enum CandidacyStatusStep {
  ARCHIVE
  PROJET
  VALIDATION
  PRISE_EN_CHARGE
  PARCOURS_ENVOYE
  PARCOURS_CONFIRME
  DOSSIER_FAISABILITE_ENVOYE
  DOSSIER_FAISABILITE_RECEVABLE
  DOSSIER_FAISABILITE_COMPLET
  DOSSIER_FAISABILITE_INCOMPLET
  DOSSIER_FAISABILITE_NON_RECEVABLE
  DOSSIER_DE_VALIDATION_ENVOYE
  DOSSIER_DE_VALIDATION_SIGNALE
}

enum EndAccompagnementStatus {
  NOT_REQUESTED
  PENDING
  CONFIRMED_BY_CANDIDATE
  CONFIRMED_BY_ADMIN
}

type CandidacyCertificationAuthorityLocalAccount {
  contactFullName: String!
  contactEmail: String!
  contactPhone: String
}

# QUERY

type Candidacy {
  id: ID!
  candidate: Candidate!
  organismId: UUID
  organism: Organism
  experiences: [Experience!]!
  goals: [Goal!]!
  typology: CandidateTypology!
  typologyAdditional: String
  ccnId: String
  conventionCollective: CandidacyConventionCollective
  readyForJuryEstimatedAt: Date
  candidacyStatuses: [CandidacyStatus!]!
  candidacyDropOut: CandidacyDropOut
  createdAt: Timestamp!
  reorientationReason: ReorientationReason
  financeModule: FinanceModule!
  feasibilityFormat: FeasibilityFormat!
  status: CandidacyStatusStep!
  typeAccompagnement: TypeAccompagnement!
  hasMoreThanOneCertificationAvailable: Boolean!
  certificationAuthorityLocalAccounts: [CandidacyCertificationAuthorityLocalAccount]
  archivingReason: CandidacyArchivingReason
  activite: ActiviteStatut!
  derniereDateActivite: Timestamp
  dateInactifEnAttente: Timestamp
  sentAt: Timestamp
  endAccompagnementDate: Timestamp
  endAccompagnementStatus: EndAccompagnementStatus
}

enum ActiviteStatut {
  ACTIF
  INACTIF_EN_ATTENTE
  INACTIF_CONFIRME
}

enum TypeAccompagnement {
  ACCOMPAGNE
  AUTONOME
}

type CandidacyDropOut {
  createdAt: Timestamp!
  dropOutReason: DropOutReason!
  otherReasonContent: String
  proofReceivedByAdmin: Boolean!
  status: CandidacyStatusStep!
  validatedAt: Timestamp
  dropOutConfirmedByCandidate: Boolean!
}

type CandidacyConventionCollective {
  id: ID!
  idcc: String!
  label: String!
}

type CandidacyConventionCollectivePaginated {
  rows: [CandidacyConventionCollective!]!
  info: PaginationInfo!
}

type CandidacyFilterInfo {
  active: Int!
  projet: Int!
  archive: Int!
  reorientation: Int!
  abandon: Int!
  validation: Int!
  priseEnCharge: Int!
  parcoursEnvoye: Int!
  parcoursConfirme: Int!
  demandeFinancementEnvoye: Int!
  demandePaiementEnvoyee: Int!
}

type CandidacyStatus {
  id: ID!
  status: CandidacyStatusStep!
  createdAt: Timestamp!
}

type Experience {
  id: ID!
  title: String!
  startedAt: Timestamp!
  duration: Duration!
  description: String!
}

enum OrganismTypology {
  experimentation
  expertFiliere
  expertBranche
  expertBrancheEtFiliere
}

type CandidacyCountByStatus {
  ACTIVE_HORS_ABANDON: Int!
  ABANDON: Int!
  REORIENTEE: Int!
  ARCHIVE_HORS_ABANDON_HORS_REORIENTATION: Int!
  PARCOURS_CONFIRME_HORS_ABANDON: Int!
  PRISE_EN_CHARGE_HORS_ABANDON: Int!
  PARCOURS_ENVOYE_HORS_ABANDON: Int!
  DOSSIER_FAISABILITE_ENVOYE_HORS_ABANDON: Int!
  DOSSIER_FAISABILITE_RECEVABLE_HORS_ABANDON: Int!
  DOSSIER_FAISABILITE_INCOMPLET_HORS_ABANDON: Int!
  DOSSIER_FAISABILITE_NON_RECEVABLE_HORS_ABANDON: Int!
  DOSSIER_DE_VALIDATION_ENVOYE_HORS_ABANDON: Int!
  DOSSIER_DE_VALIDATION_SIGNALE_HORS_ABANDON: Int!
  JURY_HORS_ABANDON: Int!
  JURY_PROGRAMME_HORS_ABANDON: Int!
  JURY_PASSE_HORS_ABANDON: Int!
  VALIDATION_HORS_ABANDON: Int!
  PROJET_HORS_ABANDON: Int!
  VAE_COLLECTIVE: Int!
  DEMANDE_FINANCEMENT_ENVOYEE: Int!
  DEMANDE_PAIEMENT_ENVOYEE: Int!
  DEMANDE_PAIEMENT_A_ENVOYER: Int!
  END_ACCOMPAGNEMENT: Int!
}

type CandidacyPage {
  rows: [Candidacy!]!
  info: PaginationInfo!
}

enum CandidacyStatusFilter {
  ACTIVE_HORS_ABANDON
  ABANDON
  REORIENTEE
  ARCHIVE_HORS_ABANDON_HORS_REORIENTATION
  PARCOURS_CONFIRME_HORS_ABANDON
  PRISE_EN_CHARGE_HORS_ABANDON
  PARCOURS_ENVOYE_HORS_ABANDON
  DOSSIER_FAISABILITE_ENVOYE_HORS_ABANDON
  DOSSIER_FAISABILITE_RECEVABLE_HORS_ABANDON
  DOSSIER_FAISABILITE_INCOMPLET_HORS_ABANDON
  DOSSIER_FAISABILITE_NON_RECEVABLE_HORS_ABANDON
  DOSSIER_DE_VALIDATION_ENVOYE_HORS_ABANDON
  DOSSIER_DE_VALIDATION_SIGNALE_HORS_ABANDON
  JURY_HORS_ABANDON
  JURY_PROGRAMME_HORS_ABANDON
  JURY_PASSE_HORS_ABANDON
  VALIDATION_HORS_ABANDON
  PROJET_HORS_ABANDON
  VAE_COLLECTIVE
  DEMANDE_FINANCEMENT_ENVOYEE
  DEMANDE_PAIEMENT_ENVOYEE
  DEMANDE_PAIEMENT_A_ENVOYER
  END_ACCOMPAGNEMENT
}

enum CandidacySortByFilter {
  DATE_CREATION_ASC
  DATE_CREATION_DESC
  DATE_ENVOI_ASC
  DATE_ENVOI_DESC
}

enum DistanceStatus {
  ONSITE
  REMOTE
}

input SearchOrganismFilter {
  distanceStatus: DistanceStatus
  pmr: Boolean
  zip: String
  isMcfCompatible: Boolean
  isAvailable: Boolean
}

type RamdomOrganisms {
  rows: [Organism!]
  totalRows: Int!
}

enum CandidacyArchivingReason {
  INACTIVITE_CANDIDAT
  REORIENTATION_HORS_FRANCE_VAE
  PROBLEME_FINANCEMENT
  AUTRE
  MULTI_CANDIDATURES
  PASSAGE_AUTONOME_A_ACCOMPAGNE
}

type Query {
  getCandidacyById(id: ID!): Candidacy
  getCandidacies(
    offset: Int
    limit: Int
    statusFilter: CandidacyStatusFilter
    searchFilter: String
    sortByFilter: CandidacySortByFilter
    maisonMereAAPId: ID
    cohorteVaeCollectiveId: ID
  ): CandidacyPage!
  getRandomOrganismsForCandidacy(
    candidacyId: UUID!
    searchText: String
    searchFilter: SearchOrganismFilter
  ): RamdomOrganisms!
  candidacy_searchOrganismsForCandidacyAsAdmin(
    candidacyId: UUID!
    offset: Int
    limit: Int
    searchText: String
  ): OrganismPage!
  candidacy_candidacyCountByStatus(
    searchFilter: String
    maisonMereAAPId: ID
    cohorteVaeCollectiveId: ID
  ): CandidacyCountByStatus!
  candidacy_getCandidacyCcns(
    offset: Int
    limit: Int
    searchFilter: String
  ): CandidacyConventionCollectivePaginated!
  candidacy_canAccessCandidacy(candidacyId: ID!): Boolean!
}

# MUTATIONS

input ExperienceInput {
  title: String!
  startedAt: Timestamp!
  duration: Duration!
  description: String!
}

input CandidateGoalInput {
  goalId: ID!
}

input UpdateCandidateInput {
  firstname: String
  lastname: String
  phone: String
  email: String
}

input DropOutInput {
  dropOutReasonId: UUID!
  otherReasonContent: String
}

type Mutation {
  candidacy_submitCandidacy(candidacyId: ID!): Candidacy
  candidacy_addExperience(
    candidacyId: ID!
    experience: ExperienceInput
  ): Experience
  candidacy_updateExperience(
    candidacyId: ID!
    experienceId: ID!
    experience: ExperienceInput
  ): Experience
  candidacy_deleteExperience(candidacyId: ID!, experienceId: ID!): Boolean
  candidacy_updateGoals(candidacyId: ID!, goals: [CandidateGoalInput!]!): Int!
  candidacy_updateContact(
    candidateId: ID!
    candidateData: UpdateCandidateInput!
  ): Candidate
  candidacy_archiveById(
    candidacyId: ID!
    archivingReason: CandidacyArchivingReason!
    archivingReasonAdditionalInformation: String
  ): Candidacy!
  candidacy_unarchiveById(candidacyId: ID!): Candidacy!
  candidacy_takeOver(candidacyId: ID!): Candidacy!
  candidacy_selectOrganism(candidacyId: UUID!, organismId: UUID!): Candidacy!
  candidacy_selectOrganismAsAdmin(
    candidacyId: UUID!
    organismId: UUID!
  ): Candidacy!
  candidacy_submitTypologyForm(
    candidacyId: ID!
    typology: CandidateTypology!
    additionalInformation: String
    ccnId: ID
  ): Candidacy!
  candidacy_dropOut(candidacyId: UUID!, dropOut: DropOutInput!): Candidacy!
  candidacy_validateDropOut(candidacyId: UUID!): Candidacy!
  candidacy_cancelDropOutById(candidacyId: UUID!): Candidacy!
  candidacy_setReadyForJuryEstimatedAt(
    candidacyId: UUID!
    readyForJuryEstimatedAt: Date!
  ): Candidacy!
  candidacy_updateTypeAccompagnement(
    candidacyId: UUID!
    typeAccompagnement: TypeAccompagnement!
    reason: String
  ): Candidacy!
  candidacy_updateCandidateCandidacyDropoutDecision(
    candidacyId: UUID!
    dropOutConfirmed: Boolean!
  ): Candidacy!
  candidacy_updateFinanceModule(
    candidacyId: UUID!
    financeModule: FinanceModule!
    reason: String
  ): Candidacy!
  candidacy_updateCandidacyInactifDecision(
    candidacyId: UUID!
    continueCandidacy: Boolean!
  ): Candidacy!
  candidacy_submitEndAccompagnement(
    candidacyId: UUID!
    endAccompagnementDate: Timestamp!
  ): Candidacy!
  candidacy_updateCandidacyEndAccompagnementDecision(
    candidacyId: UUID!
    endAccompagnement: Boolean!
  ): Candidacy!
}
