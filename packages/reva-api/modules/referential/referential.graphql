type Referential {
  goals: [Goal!]!
}

type Goal {
  id: ID!
  label: String!
  order: Int!
  needsAdditionalInformation: Boolean!
  isActive: Boolean!
}

type Region {
  id: ID!
  code: String!
  label: String!
}

type Department {
  id: ID!
  code: String!
  label: String!
}

type Degree {
  id: ID!
  code: String!
  label: String!
  longLabel: String!
  level: Int!
}

type VulnerabilityIndicator {
  id: ID!
  label: String!
}

type DropOutReason {
  id: ID!
  label: String!
  isActive: Boolean!
}

type ReorientationReason {
  id: ID!
  label: String!
  disabled: Boolean!
}

type Domaine {
  id: ID!
  code: String!
  label: String!
}

type ConventionCollective {
  id: ID!
  code: String!
  label: String!
}

type TypeDiplome {
  id: ID!
  label: String!
}

enum CertificationStatus {
  INACTIVE
  SOON
  AVAILABLE
}

type Certification {
  id: ID!
  label: String!
  summary: String!
  level: Int!
  activities: String
  activityArea: String
  accessibleJobType: String
  abilities: String
  codeRncp: String!
  status: CertificationStatus!
  typeDiplome: TypeDiplome!
}

type CertificationPage {
  rows: [Certification!]!
  info: PaginationInfo!
}

type Query {
  getReferential: Referential!
  getCertifications(
    offset: Int
    limit: Int
    departmentId: UUID
    organismId: UUID
    searchText: String
  ): CertificationPage!
  getCertification(certificationId: ID!): Certification!
  getRegions: [Region!]!
  getDepartments: [Department!]!
  getDegrees: [Degree!]!
  getVulnerabilityIndicators: [VulnerabilityIndicator!]!
  getDropOutReasons: [DropOutReason!]!
  getReorientationReasons: [ReorientationReason!]!
  getDomaines: [Domaine]!
  getConventionCollectives: [ConventionCollective]!
}
